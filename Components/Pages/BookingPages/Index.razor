@page "/bookings"
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.EntityFrameworkCore
@using FixtureManagementV3.Models
@using FixtureManagementV3.Components.Helper

@implements IAsyncDisposable
@inject IDbContextFactory<AppDBContext> DbFactory
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Bookings</PageTitle>

<h1>Bookings</h1>
<hr/>
<div class="row align-items-center mb-3"
    <div class="col-auto">
        @if (isAuthenticated)  {
                <a class="btn btn-primary" href="bookings/create">Add Booking</a>
                @* <input type="checkbox" class="btn-check" id="btn-check" autocomplete="off">
                <label class="btn btn-check-primary" for="btn-check">Single toggle</label> *@
                @* <input type="checkbox" class="btn-check" id="btn-check-outlined" autocomplete="off">
                @* <label class="btn btn-outline-primary" for="btn-check-outlined">Single toggle</label><br> *@
                @* <input type="checkbox" class="btn-check" id="btn-check" autocomplete="off" onclick="FilterDate()">
                <label>Show Past</label> *@             
        }
    </div>
    <div class="col-auto">
        <input type="checkbox" id="show-past" onclick="ToggleRows(!this.checked)" class="form-check-input"/>
        <label>Show Past</label>
    </div>
</div

<QuickGrid Class="table" Items="context.Booking.Include(b => b.Pitch)">
    <PropertyColumn Property="booking => booking.Title" />
    <PropertyColumn Property="booking => booking.Start" />
    <PropertyColumn Property="booking => booking.End" />
    <PropertyColumn Property="booking => booking.Pitch!.Name" title="Pitch"/>
    <TemplateColumn Context="booking"  title="Recurring" Align="Align.Center">
        <InputCheckbox @bind-Value="booking.IsRecurring" disabled class="@{booking.IsPast ? "past": ""}"/>
    </TemplateColumn>
    @if (isAuthenticated) {
        <TemplateColumn Context="booking">
            <a href="@($"bookings/edit?id={booking.Id}")"><Icon Type="Icon.IconType.Edit"/></a>
            <a href="@($"bookings/delete?id={booking.Id}")"><Icon Type="Icon.IconType.Delete"/></a>
        </TemplateColumn>
    }
</QuickGrid>

<script>
    function HideRows(node) {
        node.parentElement.parentElement.hidden = true;
    }
    function ShowRows(node) {
        node.parentElement.parentElement.hidden = false;
    }

    function ToggleRows(hidden){

        // Get all rows of the table
        const rows = document.querySelectorAll('.past');

        rows.forEach(row => {
            row.parentElement.parentElement.hidden = hidden;
        });
    }

    ToggleRows(true);
</script>

@code {
    private AppDBContext context = default!;
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync() 
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isAuthenticated = (user.Identity is not null && user.Identity.IsAuthenticated);

        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
