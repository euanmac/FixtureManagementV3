@page "/teams/delete"
@using Microsoft.EntityFrameworkCore
@using FixtureManagementV3.Models
@inject IDbContextFactory<AppDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Team</h2>
    <hr />
    @if (team is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@team.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AgeGroup</dt>
            <dd class="col-sm-10">@team.AgeGroup</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Gender</dt>
            <dd class="col-sm-10">@team.Gender</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">League</dt>
            <dd class="col-sm-10">@team.League</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Division</dt>
            <dd class="col-sm-10">@team.Division</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FullTimeTeamId</dt>
            <dd class="col-sm-10">@team.FullTimeTeamId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FullTimeLeagueId</dt>
            <dd class="col-sm-10">@team.FullTimeLeagueId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">GroupDescription</dt>
            <dd class="col-sm-10">@team.GroupDescription</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TeamSize</dt>
            <dd class="col-sm-10">@team.TeamSize</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MatchDay</dt>
            <dd class="col-sm-10">@team.MatchDay</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FixtureURL</dt>
            <dd class="col-sm-10"><a href="@team.FixtureURL">@team.FixtureURL</a></dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Contacts</dt>
            <dd class="col-sm-10">@team.Contacts</dd>
        </dl>
        <EditForm method="post" Model="team" OnValidSubmit="DeleteTeam" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(team is null)">Delete</button> |
            <a href="/teams">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Team? team;

    [SupplyParameterFromQuery]
    private System.Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        team = await context.Team.FirstOrDefaultAsync(m => m.Id == Id);

        if (team is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteTeam()
    {
        using var context = DbFactory.CreateDbContext();
        context.Team.Remove(team!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/teams");
    }
}
