@page "/contacts/create"
@using Microsoft.EntityFrameworkCore
@using FixtureManagementV3.Models
@inject IDbContextFactory<AppDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Person</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Person" OnValidSubmit="AddPerson" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label> 
                <InputText id="firstname" @bind-Value="Person.FirstName" class="form-control" /> 
                <ValidationMessage For="() => Person.FirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label> 
                <InputText id="lastname" @bind-Value="Person.LastName" class="form-control" /> 
                <ValidationMessage For="() => Person.LastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="tel" class="form-label">Tel:</label> 
                <InputText id="tel" @bind-Value="Person.Tel" class="form-control" /> 
                <ValidationMessage For="() => Person.Tel" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Person.Email" class="form-control" /> 
                <ValidationMessage For="() => Person.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isref" class="form-label">IsRef:</label> 
                <InputCheckbox id="isref" @bind-Value="Person.IsRef" class="form-check-input" /> 
                <ValidationMessage For="() => Person.IsRef" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/contacts">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Person Person { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddPerson()
    {
        using var context = DbFactory.CreateDbContext();
        context.Person.Add(Person);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/contacts");
    }
}
