@page "/fixtures/delete"
@using Microsoft.EntityFrameworkCore
@using FixtureManagementV3.Models
@inject IDbContextFactory<AppDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>

    @if (fixture is null)
    {
        <h2>Fixture</h2>
        <hr />
        <p><em>Loading...</em></p>
    }
    else {
        <hr/>
        var team = fixture.Team?.DisplayName ?? "Hello";
        <h3>@team</h3>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">Date</dt>
            <dd class="col-sm-10">@fixture.Date</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsHome</dt>
            <dd class="col-sm-10">@fixture.IsHome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Opponent</dt>
            <dd class="col-sm-10">@fixture.Opponent</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FixtureType</dt>
            <dd class="col-sm-10">@fixture.FixtureType</dd>
        </dl>
        <EditForm method="post" Model="fixture" OnValidSubmit="DeleteFixture" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(fixture is null)">Delete</button> |
            <a href="/fixtures">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Fixture? fixture;

    [SupplyParameterFromQuery]
    private System.Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        fixture = await context.Fixture
            .Include(f => f.Team)
            .FirstOrDefaultAsync(m => m.Id == Id);

        if (fixture is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteFixture()
    {
        using var context = DbFactory.CreateDbContext();
        context.Fixture.Remove(fixture!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/fixtures");
    }
}
